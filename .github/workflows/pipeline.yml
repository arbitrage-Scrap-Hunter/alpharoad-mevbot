name: CI/CD

on:
  push:
  release:
    types: [created]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.9]

    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      - name: Run image # install poetry
        uses: abatilo/actions-poetry@v2.0.0
        with:
          poetry-version: 1.1.6
      - name: Install dependencies # install all dependencies
        run: poetry install
      - name: Pylint # Run pylint static analysis
        run: |
          poetry run pylint async_web3
      - name: mypy  # Run mypy static analysis
        run: |
          poetry run mypy -p async_web3
      - name: Pytest # Run pytest
        run: |
          poetry run coverage run -m --source=async_web3 pytest tests
          poetry run coverage report

  publish:
    if: github.event_name == 'release' && github.event.action == 'created'
    needs: test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v2
        with:
          python-version: "3.9"
      - name: Run image
        uses: abatilo/actions-poetry@v2.0.0
        with:
          poetry-version: 1.1.6
      - name: Build and publish
        env:
          PYPI_USERNAME: ${{ secrets.PYPI_USERNAME }}
          PYPI_PASSWORD: ${{ secrets.PYPI_PASSWORD }}
        run: poetry publish -u $PYPI_USERNAME -p $PYPI_PASSWORD --build
